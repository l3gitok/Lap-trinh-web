.ToDoItem {
    display: flex;
    align-items: center;
    padding: 15px; 
    border: 1px solid #ddd; 
    border-radius: 8px; 
    margin-bottom: 10px; 
    background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2)); 
    transition: background-color 0.4s, transform 0.2s; 
    animation: wave 5s infinite; 
}

.ToDoItem:hover {
    background-color: rgba(var(--color1), 0.5); 
    transform: scale(1.02); 
}

.ItemContent {
    margin-right: 15px; 
    margin-left: 10px;
    width: 100%;
}

.ToDoItem .Title {
    font-size: 18px; 
    font-weight: bold; 
    color: #ffffff; 
}

.ToDoItem .DueDate {
    font-size: 15px; 
    color: #ffffff; 
}

.ToDoItem .Action * {
    margin-right: 8px; 
    cursor: pointer; 
    transition: color 0.3s; 
}

.ToDoItem .Action :hover {
    color: rgba(var(--color4), 1); 
}

.ToDoItem input[type="checkbox"] {
    appearance: none; 
    -webkit-appearance: none; 
    -moz-appearance: none; 
    width: 20px; 
    height: 20px;
    background-color: #fff; 
    border: 2px solid rgba(var(--color1), 1); 
    border-radius: 4px; 
    position: relative;
    cursor: pointer;
}

.ToDoItem input[type="checkbox"]:checked {
    background-color: rgba(var(--color1), 1); 
    border-color: rgba(var(--color1), 1);
}

.ToDoItem input[type="checkbox"]:checked::before {
    content: "\2713"; 
    color: white; 
    font-size: 16px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@keyframes wave {
    0% { background-color: rgba(var(--color1)); }
    50% { background-color: rgba(var(--color2), 0.5); } 
    100% { background-color: rgba(var(--color1)); }
}

.modal {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    max-width: 500px;
    background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2)); 
    transition: background-color 0.4s, transform 0.2s; 
    animation: wave 5s infinite; 
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    padding: 30px; 
    z-index: 1000;
    animation: fadeIn 0.8s; 
}

.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.modal .close-btn {
    align-self: flex-end;
    background: transparent;
    border: none;
    font-size: 18px; 
    cursor: pointer;
    color: rgba(var(--color4), 1); 
    transition: color 0.3s;
    margin-bottom: 15px; 
}

.modal .close-btn:hover {
    color: rgba(var(--color4), 0.8);
}

.ToDoItem.completed .Title {
    text-decoration: line-through;
    color: #aaa;
    opacity: 0.5;
}

button {
    background-color: rgba(var(--color4), 0.9); 
    color: #ffffff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.5s; 
}

button:hover {
    background-color: rgba(var(--color4), 0.7);
}

.button-new {
    background-color: rgba(var(--color5), 0.9);
    color: rgb(173, 40, 40); 
    border: none; 
    padding: 10px 20px; 
    border-radius: 5px; 
    cursor: pointer; 
    transition: background-color 0.3s; 
}

.button-new:hover {
    background-color: rgba(var(--color5), 0.7); 
}

.modal h2 {
    margin-bottom: 20px; 
    font-size: 24px; 
    color: #ffffff; 
}

.modal p {
    margin-bottom: 15px; 
    line-height: 1.5; 
    color: #ffffff; 
}

.modal button {
    margin-top: 10px; 
    width: 100%; 
}

:root {
    --color-bg1: #1D1E18; 
    --color-bg2: #6B8F71; 
    --color1: #AAD2BA;    
    --color2: #D9FFF5;    
    --color4: #D9FFF5;    
    --color5: #6B8F71; 
    --color6: #7C616C;
    --color7: #EAFDF8;
    --color8: #E5E9EC;
    --color9: #D1B1CB;
    

}

.add-task-button {
    background-color: #e76312; 
    color: #ffffff; 
    border: none; 
    padding: 10px 15px; 
    border-radius: 5px; 
    cursor: pointer;  
    transition: background-color 0.3s; 
} 


.add-task-button:hover {
    background-color: #e7aa1a; 
}
body {
    background-color: #AAD2BA;
    transition: background-color 0.5s ease-in-out;
    
    
}

body.dark-mode {
    background-color: #2c2c2c;
}
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
}

.modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--color-bg1);
    padding: 20px;
    border-radius: 10px;
    z-index: 1001;
}
.modal input[type="text"] {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
    transition: border-color 0.3s, box-shadow 0.3s;
}

.modal input[type="text"]:focus {
    border-color: var(--color1);
    box-shadow: 0 0 5px rgba(var(--color1), 0.5);
    outline: none;
}


.modal input[type="text"]::placeholder {
    color: #999;
    font-style: italic;
    transition: color 0.3s ease-in-out;
}

.modal input[type="text"]:focus::placeholder {
    color: #666;
}

.modal input[type="text"] {
    font-family: 'Arial', sans-serif;
    font-size: 16px;
    font-weight: 400;
}

body {
    overflow: hidden;
    position: relative;
    animation: bodyAnimation 5s infinite alternate;
}

@keyframes bodyAnimation {
    0% {
        background-color: #AAD2BA;
    }
    50% {
        background-color: #6B8F71;
    }
    100% {
        background-color: #AAD2BA;
    }
}

@for $i from 1 through 100 {
    .star-#{$i} {
        position: absolute;
        top: -10px;
        left: random(100) + vw;
        width: 2px;
        height: 2px;
        background: white;
        animation: star random(5) + s linear infinite;
        animation-delay: random(5) + s;
    }
}

@keyframes star {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(100vh);
    }
}

.star {
    position: absolute;
    top: -10px;
    width: 2px;
    height: 2px;
    background: white;
    animation: star 5s linear infinite;
}

@for $i from 1 through 100 {
    .star:nth-child(#{$i}) {
        left: random(100) + vw;
        animation-duration: random(5) + s;
        animation-delay: random(5) + s;
    }
}
